/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: nimzu (https://sketchfab.com/nimzuk)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/foxs-islands-163b68e09fcc47618450150be7785907
Title: Fox's islands
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { events, useFrame, useThree} from "@react-three/fiber";
import {a} from "@react-spring/three"
import isLandScene from "../assets/3d/island.glb"

function Island({
  isRotation,
  setIsRotation,
  ...props
}) {

  const islandRef = useRef();
  const {gl,viewport} = useThree()

  const { nodes, materials } = useGLTF(isLandScene)

  const lastX = useRef(0)  
  const rotationSpeed = useRef(0)
  const dampingFactor = 0.95

  const handleMouseDown = (event) =>{
    event.stopProgation();
    event.preventDefault();
    setIsRotation(true);

    const clientX = event.touches ? event.touches.clientX : event.clientX;

    lastX.current = clientX;
  }

  const handlePointerUp = (event) =>{
    event.stopProgation();
    event.preventDefault();
    setIsRotation(false)
  }

  const handlePointerMove = (event) => {
    event.stopPropagation();
    event.preventDefault();

    if(isRotation){
      const clientX =  event.touches ? event.touches[0].clientX : event.clientX;
    
      const delta = [clientX = lastX.current] / viewport/width;

      islandRef.current.rotation.y += delta * 0.01 * Math.PI;

      lastX.current = clientX;

      rotationSpeed.current = delta * 0.01 * Math.PI;
    }
  }

  return (
    <a.group ref={islandRef} {...props} >
        <mesh
          geometry={nodes.polySurface944_tree_body_0.geometry}
          material={materials.PaletteMaterial001}
        />
        <mesh
          geometry={nodes.polySurface945_tree1_0.geometry}
          material={materials.PaletteMaterial001}
        />
        <mesh
          geometry={nodes.polySurface946_tree2_0.geometry}
          material={materials.PaletteMaterial001}
        />
        <mesh
          geometry={nodes.polySurface947_tree1_0.geometry}
          material={materials.PaletteMaterial001}
        />
        <mesh
          geometry={nodes.polySurface948_tree_body_0.geometry}
          material={materials.PaletteMaterial001}
        />
        <mesh
          geometry={nodes.polySurface949_tree_body_0.geometry}
          material={materials.PaletteMaterial001}
        />

        <mesh
          geometry={nodes.pCube11_rocks1_0.geometry}
          material={materials.PaletteMaterial001}
        />
    </a.group>
  )
}

export default Island
